{"name":"Core-Bukkit - developing for the Bukkit-specific implementation of MineQuest","tagline":"Bukkit-specific implementation of the API","body":"# Overview\r\nThis site was created to help developers look up information and integrate MineQuest into their plugins through the use of our APIs. Starting with version 3.0.0, our API is platform-independent; so we have an API site for each specific implementation. This is the Bukkit implementation.\r\n\r\n## Java Version\r\nMineQuest and its components are built for **Java 7** and up. We do not support deprecated versions (including Java 6, which hit end of life in February 2013).\r\n\r\n## Linking to our APIs\r\nYou can most easily do this with Maven, or Apache Ant if you have Ivy. If you want the bukkit-specific version:\r\n```\r\n<dependency>\r\n   <groupId>com.theminequest</groupId>\r\n   <artifactId>bukkit</artifactId>\r\n   <version>3.0.0-SNAPSHOT</version>\r\n</dependency>\r\n```\r\nOr, if you want the platform-independent version:\r\n```\r\n<dependency>\r\n   <groupId>com.theminequest</groupId>\r\n   <artifactId>common</artifactId>\r\n   <version>3.0.0-SNAPSHOT</version>\r\n</dependency>\r\n```\r\nIn addition, you'll need our repository:\r\n```\r\n<repositories>\r\n   <repository>\r\n      <id>jci-lincom</id>\r\n      <url>http://jci.lincomlinux.org/plugin/repository/everything/</url>\r\n   </repository>\r\n</repositories>\r\n```\r\n\r\n## Accessing Information\r\nAll accessible information should be done through the managers provided. See the [Managers](http://jci.lincomlinux.org/job/MineQuest-3-API/javadoc/com/theminequest/api/Managers.html) class for more information on how to access these managers. In addition, the common implementation has its own Manager that can be accessed - see the [Common Manager](http://jci.lincomlinux.org/job/MineQuest-Common/javadoc/com/theminequest/common/Common.html) for more details on how to utilise it.\r\n\r\n## Listening to System Events\r\nWhenever an action is triggered in MineQuest, the respective event is fired to the system event system for any plugins to process. You should listen for our [Bukkit Event](http://jci.lincomlinux.org/job/MineQuest-3-Core-Bukkit/javadoc/index.html?com/theminequest/bukkit/platform/BukkitEvent.html), switch on getName() to handle it respectively.\r\n\r\nSome events are cancellable. Should you not want an event to occur, simply cancel it.\r\n\r\n## Extending functionality within quests\r\nYou can extend functionality any different number of ways. With the advent of new scripting frameworks, the Quest -> Task -> Event system is **not required**. We do, however, still have formats (V1-compatible) that work with this system, including our *.quest, *.json, and *.xml formats. All are documented below:\r\n\r\n### Creating Quest Events for V1-compatible formats\r\nQuest Events - that is, events that trigger during a quest, allow complete control over the quest (and if manually triggered outside a quest, complete control of the server).\r\n\r\nA brief overview of how this works:\r\n* You make a class that extends QuestEvent, DelayedQuestEvent, or another class that extends off of one of those. It must have a default constructor (aka, no parameters in the constructor). \r\n* MineQuest, with its EventManager, takes that event, initializes it, and keeps track of it.\r\n* *In addition*, to have your event display an objective to the user, you may implement UserQuestEvent.\r\n\r\nYou can find the source for our implemented events at our Github.\r\n\r\nAfter you have created your QuestEvent, you should register it. The **V1EventManager** class should help\r\nyou register your new event with MineQuest so that it becomes functional for V1-compatible formats. Give your event a name and register it and the class you've just created that implements QuestEvent in [the manager](http://jci.lincomlinux.org/job/MineQuest-Common/javadoc/com/theminequest/common/quest/v1/V1EventManager.html#addEvent%28java.lang.String,%20java.lang.Class%29).\r\n\r\n### Accessing the Quest Parser for V1-compatible formats\r\nIf you wanted to add your own touch into Quest files, there's never been a better time! You can do that with our V1Parser interface. Simply [implement it](http://jci.lincomlinux.org/job/MineQuest-Common/javadoc/com/theminequest/common/quest/v1/V1Parser.html) and register it.\r\n\r\nThe [QuestDetails](http://jci.lincomlinux.org/job/MineQuest-3-API/javadoc/com/theminequest/api/quest/QuestDetails.html) class describes the quest from start to finish, including every single minute detail. It is simply a LinkedHashMap database of String keys and **Serializable** objects.\r\n\r\n### Creating Requirements for all formats\r\nRequirements define a powerful feature of MineQuest - the ability to give, run, and shape quests based on the environment. This can be further extended to external leveling systems or meeting certain entities before being able to take quests.\r\n\r\nCreating a requirement is much like a Quest Event: You create a class that extends (QuestRequirement)[http://jci.lincomlinux.org/job/MineQuest-3-API/javadoc/com/theminequest/api/requirement/QuestRequirement.html]. Then, add it to [the requirement manager](http://jci.lincomlinux.org/job/MineQuest-3-API/javadoc/com/theminequest/api/requirement/RequirementManager.html#register%28java.lang.String,%20java.lang.Class%29) so that the requirement manager knows that it exists.\r\n\r\nThen, to utilise it in a V1-compatible quest:\r\n```\r\n# define a requirement\r\nRequirement:ID:Name:Details...\r\n# as a requirement for getting the quest\r\nGetReq:ID,ID,ID\r\n# as a requirement for starting the quest\r\nStartReq:ID,ID,ID\r\n# as an event in a quest\r\nEvent:ID:RequirementEvent:*delay*:*requirement ID*:*task if met*:*task if not met*\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}